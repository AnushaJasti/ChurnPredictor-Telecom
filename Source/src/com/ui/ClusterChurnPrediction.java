/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClusterChurnPrediction.java
 *
 * Created on Mar 5, 2018, 10:59:12 AM
 */
package com.ui;

import com.bean.SessionBean;
import com.cluster.common.Cluster;
import com.cluster.common.Record;
import com.cluster.sdscm.ScdmCluster;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author saisi
 */
public class ClusterChurnPrediction extends javax.swing.JFrame {

    Object []headers;
    Object [][]data;
    static int cleanclusters;
    /** Creates new form ClusterChurnPrediction */
    public ClusterChurnPrediction() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 150, 0, 0));
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(churnpredictor_telecom.ChurnPredictor_TelecomApp.class).getContext().getResourceMap(ClusterChurnPrediction.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jButton4.setFont(resourceMap.getFont("jButton4.font")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(resourceMap.getFont("jButton5.font")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        try
        {
        SessionBean session=SessionBean.getSession();
        java.util.ArrayList<ScdmCluster> clusters;
        clusters=(ArrayList<ScdmCluster>)session.getAttribute("SDSCM_CLUSTERS");
        
        headers=new Object[2];
        headers[0]="Cluster No";
        headers[1]="No of Records";
          Cluster currentCluster = null;
        data=new Object[clusters.size()][2];
        
        jLabel2.setText("Cluster & Records Statistics ");
        for(int i=0;i<data.length;i++)
        {
              data[i][0]="Cluster-" + (i+1);
               currentCluster = (Cluster)clusters.get(i);
            ArrayList<Record> records = currentCluster.getRecords();
              data[i][1]=records.size();
                      
                      }
        
        TableModel tm=new DefaultTableModel(data, headers);
        jTable1.setModel(tm);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error In Generating Stats ");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try
        {
             SessionBean session=SessionBean.getSession();
        java.util.ArrayList<ScdmCluster> clusters;
        clusters=(ArrayList<ScdmCluster>)session.getAttribute("SDSCM_CLUSTERS");
        
        headers=new Object[2];
        headers[0]="Cluster No";
        headers[1]="Churn Rate %";
          Cluster currentCluster = null;
        data=new Object[clusters.size()][2];
        
        jLabel2.setText("Cluster & ChurnRates ");
        int totalrecords;
        int nonloyal;
        totalrecords=nonloyal=0;
        for(int i=0;i<data.length;i++)
        {
              data[i][0]="Cluster-" + (i+1);
               currentCluster = (Cluster)clusters.get(i);
            ArrayList<Record> records = currentCluster.getRecords();
                      
              Record curRecord = null;
            for(int j=0;j<records.size();j++)
            {
                curRecord = records.get(j);
                
                if(curRecord.getAttribute(curRecord.getSize()-2).toString().equals("1.0"))
                       nonloyal++;
            }
              data[i][1]=(((double)nonloyal/records.size())*100)/2;
              nonloyal=0;
          }
         TableModel tm=new DefaultTableModel(data, headers);
        jTable1.setModel(tm);
        }
        catch(Exception ex)
        {
           JOptionPane.showMessageDialog(this,"Error In Generating Stats "); 
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         MainMenu t=new MainMenu();
        this.dispose();
        t.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
          try
        {
             SessionBean session=SessionBean.getSession();
        java.util.ArrayList<ScdmCluster> clusters;
        clusters=(ArrayList<ScdmCluster>)session.getAttribute("SDSCM_CLUSTERS");
        
        headers=new Object[4];
        headers[0]="Cluster No";
        headers[1]="Xi";
        headers[2]="e";
        headers[3]="Vi";
          Cluster currentCluster = null;
        data=new Object[clusters.size()][4];
        
        jLabel2.setText("Xi    e    Vi Calculations  ");
        int totalrecords;
        int nonloyal;
        int totalamount=0;
        totalrecords=nonloyal=0;
        cleanclusters=0;
        for(int i=0;i<data.length;i++)
        {
              data[i][0]="Cluster-" + (i+1);
               currentCluster = (Cluster)clusters.get(i);
            ArrayList<Record> records = currentCluster.getRecords();
                      
            data[i][1]=records.size();
              Record curRecord = null;
            for(int j=0;j<records.size();j++)
            {
                curRecord = records.get(j);
                
                if(curRecord.getAttribute(curRecord.getSize()-2).toString().equals("1.0"))
                       nonloyal++;
                
                totalamount+=Double.parseDouble(curRecord.getAttribute(curRecord.getSize()-1).toString());
            }
              data[i][2]=(((double)nonloyal/records.size())*100)/2;
              if(Double.parseDouble(data[i][2]+"")==0.0)
                  cleanclusters++;
              data[i][3]=totalamount;
              totalamount=0;
              nonloyal=0;
          }
         TableModel tm=new DefaultTableModel(data, headers);
        jTable1.setModel(tm);
        }
        catch(Exception ex)
        {
           JOptionPane.showMessageDialog(this,"Error In Generating Stats "); 
        }
     
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        try
        {
             SessionBean session=SessionBean.getSession();
        java.util.ArrayList<ScdmCluster> clusters;
        clusters=(ArrayList<ScdmCluster>)session.getAttribute("SDSCM_CLUSTERS");
        
        headers=new Object[4];
        headers[0]="Cluster No";
        headers[1]="Xi";
        headers[2]="e";
        headers[3]="Vi";
          Cluster currentCluster = null;
        data=new Object[clusters.size()-cleanclusters][4];
        
        jLabel2.setText("Churn Expected Clusters  ");
        int totalrecords;
        int nonloyal;
        int totalamount=0;
        totalrecords=nonloyal=0;
        int start=0;
        for(int i=0;i<clusters.size();i++)
        {
              
               currentCluster = (Cluster)clusters.get(i);
            ArrayList<Record> records = currentCluster.getRecords();
                      
            
              Record curRecord = null;
            for(int j=0;j<records.size();j++)
            {
                curRecord = records.get(j);
                
                if(curRecord.getAttribute(curRecord.getSize()-2).toString().equals("1.0"))
                       nonloyal++;
                
                totalamount+=Double.parseDouble(curRecord.getAttribute(curRecord.getSize()-1).toString());
            }
            
            double cost=((double)nonloyal/records.size())*100;
            if(cost!=0)
            {
                data[start][0]="Cluster-" + (i+1);
               data[start][1]=records.size();
              data[start][2]=(((double)nonloyal/records.size())*100)/2;
              data[start][3]=totalamount; 
              start++;
            }
     totalamount=0;
              nonloyal=0;
          }
         TableModel tm=new DefaultTableModel(data, headers);
        jTable1.setModel(tm);
        
        session.setAttribute("suggessted", data);
        }
        catch(Exception ex)
        {
           JOptionPane.showMessageDialog(this,"Error In Generating Stats "); 
        }
     
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ClusterChurnPrediction().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
