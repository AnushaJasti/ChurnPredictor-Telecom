/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SDSCMPhase.java
 *
 * Created on Mar 5, 2018, 10:40:48 AM
 */
package com.ui;

import com.bean.InputDataBean;
import com.bean.SessionBean;
import com.cluster.common.Cluster;
import com.cluster.common.Record;
import com.cluster.sdscm.ScdmCluster;
import com.cluster.sdscm.ScdmClusterGenerator;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author saisi
 */
public class SDSCMPhase extends javax.swing.JFrame {

    /** Creates new form SDSCMPhase */
    public SDSCMPhase() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        opArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 150, 0, 0));
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(churnpredictor_telecom.ChurnPredictor_TelecomApp.class).getContext().getResourceMap(SDSCMPhase.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        opArea.setColumns(20);
        opArea.setEditable(false);
        opArea.setFont(resourceMap.getFont("opArea.font")); // NOI18N
        opArea.setRows(5);
        opArea.setText(resourceMap.getString("opArea.text")); // NOI18N
        opArea.setName("opArea"); // NOI18N
        jScrollPane1.setViewportView(opArea);

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         SessionBean session = SessionBean.getSession();
        try
        {
            
             InputDataBean dataBean = (InputDataBean)session.getAttribute("InputDataSet"); 
           java.util.ArrayList<ScdmCluster> clusters = new ScdmClusterGenerator().generateClusters(dataBean.getDataSet(),50,30); 
                session.setAttribute("SDSCM_CLUSTERS", clusters);
                fillClusters(clusters,opArea);
        }
        catch(Exception ex)
        {
                JOptionPane.showMessageDialog(this, "Error Generating Clusters in SDSCM Algorithm");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
MainMenu mm=new MainMenu();
this.dispose();
mm.setVisible(true);
        
    }//GEN-LAST:event_jButton2ActionPerformed

       private void fillClusters(List clusters,JTextArea area){
        area.setText("                                             SDSCM IMPLEMENTATION WITH RAW DATA AND PARALLEL K-MEANS CLUSTERING     \r\n");
        Cluster currentCluster = null;
        for(int i=0;i<clusters.size();i++){
            area.append("\n");
            area.append("**************************************\n");
            area.append("\n");
            area.append("  Cluster "+(i+1)+"\n");
            area.append("\n");
            currentCluster = (Cluster)clusters.get(i);
            ArrayList<Record> records = currentCluster.getRecords();
            Record curRecord = null;
            for(int j=0;j<records.size();j++)
            {
                curRecord = records.get(j);
                for(int k=0;k<curRecord.getSize();k++){
                    area.append(curRecord.getAttribute(k)+"\t");
                }
                area.append("\n");
            }
            area.append("\n");
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SDSCMPhase().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea opArea;
    // End of variables declaration//GEN-END:variables
}
