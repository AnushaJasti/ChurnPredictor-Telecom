/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClusterPhase.java
 *
 * Created on Jan 22, 2018, 10:44:52 AM
 */
package com.ui;

import java.util.ArrayList;
import com.bean.*;
import com.cluster.kmean.*;
import com.cluster.kmedoid.*;
import com.cluster.common.*;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import com.cluster.common.Cluster;
import java.io.File;
import java.io.FileInputStream;


/**
 *
 * @author Administrator
 */
public class ClusterPhase extends javax.swing.JFrame {

    /** Creates new form ClusterPhase */
    public ClusterPhase() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clustersTab = new javax.swing.JTabbedPane();
        kmeanTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        kmeanArea = new javax.swing.JTextArea();
        kmedoidsTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        kmedoidArea = new javax.swing.JTextArea();
        jPanel27 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtClusterCount = new javax.swing.JTextField();
        Generate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(200, 150, 0, 0));
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(churnpredictor_telecom.ChurnPredictor_TelecomApp.class).getContext().getResourceMap(ClusterPhase.class);
        clustersTab.setBackground(resourceMap.getColor("clustersTab.background")); // NOI18N
        clustersTab.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("clustersTab.border.title"))); // NOI18N
        clustersTab.setFont(resourceMap.getFont("clustersTab.font")); // NOI18N
        clustersTab.setName("clustersTab"); // NOI18N

        kmeanTab.setName("kmeanTab"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        kmeanArea.setColumns(20);
        kmeanArea.setEditable(false);
        kmeanArea.setRows(5);
        kmeanArea.setName("kmeanArea"); // NOI18N
        jScrollPane2.setViewportView(kmeanArea);

        javax.swing.GroupLayout kmeanTabLayout = new javax.swing.GroupLayout(kmeanTab);
        kmeanTab.setLayout(kmeanTabLayout);
        kmeanTabLayout.setHorizontalGroup(
            kmeanTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
        );
        kmeanTabLayout.setVerticalGroup(
            kmeanTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );

        clustersTab.addTab(resourceMap.getString("kmeanTab.TabConstraints.tabTitle"), kmeanTab); // NOI18N

        kmedoidsTab.setName("kmedoidsTab"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        kmedoidArea.setColumns(20);
        kmedoidArea.setRows(5);
        kmedoidArea.setName("kmedoidArea"); // NOI18N
        jScrollPane3.setViewportView(kmedoidArea);

        javax.swing.GroupLayout kmedoidsTabLayout = new javax.swing.GroupLayout(kmedoidsTab);
        kmedoidsTab.setLayout(kmedoidsTabLayout);
        kmedoidsTabLayout.setHorizontalGroup(
            kmedoidsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
        );
        kmedoidsTabLayout.setVerticalGroup(
            kmedoidsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );

        clustersTab.addTab(resourceMap.getString("kmedoidsTab.TabConstraints.tabTitle"), kmedoidsTab); // NOI18N

        jPanel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel27.setName("jPanel27"); // NOI18N

        jLabel30.setFont(resourceMap.getFont("jLabel30.font")); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText(resourceMap.getString("jLabel30.text")); // NOI18N
        jLabel30.setName("jLabel30"); // NOI18N

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        jButton4.setFont(resourceMap.getFont("jButton4.font")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtClusterCount.setFont(resourceMap.getFont("txtClusterCount.font")); // NOI18N
        txtClusterCount.setText(resourceMap.getString("txtClusterCount.text")); // NOI18N
        txtClusterCount.setName("txtClusterCount"); // NOI18N

        Generate.setFont(resourceMap.getFont("Generate.font")); // NOI18N
        Generate.setText(resourceMap.getString("Generate.text")); // NOI18N
        Generate.setName("Generate"); // NOI18N
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(txtClusterCount, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Generate))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(256, 256, 256))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(clustersTab, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(41, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtClusterCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Generate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(33, 33, 33))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(146, Short.MAX_VALUE)
                    .addComponent(clustersTab, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(69, 69, 69)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // cluster analysis for all clusters....
        SessionBean session = SessionBean.getSession();
        // get the clusters from the session for all the techniques
        // for kmeans...
        ArrayList<KMeanCluster> clusters = (ArrayList<KMeanCluster>)session.getAttribute("KMEAN_CLUSTERS");
        ArrayList<Double> kmeanAnalysisResults = new ArrayList<Double>();
        KMeanCluster curCluster=null;
        for(int i=0;i<clusters.size();i++) {
            curCluster = clusters.get(i);
            Double distance = new Double("0.0");
            // get the centroid
            com.cluster.common.Record<Double> centroid = com.util.ClusterUtil.getCentroid(curCluster);
            // get the total distance
            com.cluster.common.Record curRecord = null;
            
            for(int j=0;j<curCluster.getRecords().size();j++){
                curRecord = curCluster.getRecords().get(j);
                System.out.println("dis :"+com.util.ClusterUtil.getDistance(centroid, curRecord));
                distance += com.util.ClusterUtil.getDistance(centroid, curRecord);
            }
            // get total...
            kmeanAnalysisResults.add(distance/curCluster.getRecords().size());
        }
        session.setAttribute("KMEAN_ANALYSIS_RESULTS", kmeanAnalysisResults);
        System.out.println("results...."+kmeanAnalysisResults);
        
        // for kmedoids...
        ArrayList<KMedoidCluster> mclusters = (ArrayList<KMedoidCluster>)session.getAttribute("KMEDOID_CLUSTERS");
        ArrayList<Double> kmedoidAnalysisResults = new ArrayList<Double>();
        KMedoidCluster mcurCluster=null;
        for(int i=0;i<mclusters.size();i++){
            mcurCluster = mclusters.get(i);
            Double mdistance = new Double("0.0");
            // get the centroid
            com.cluster.common.Record<Double> mcentroid = com.util.ClusterUtil.getCentroid(mcurCluster);
            // get the total distance
            com.cluster.common.Record mcurRecord = null;
            
            for(int j=0;j<mcurCluster.getRecords().size();j++){
                mcurRecord = mcurCluster.getRecords().get(j);
                // System.out.println("dis :"+com.util.ClusterUtil.getDistance(mcentroid, mcurRecord));
                mdistance += com.util.ClusterUtil.getDistance(mcentroid, mcurRecord);
            }
            // get total...
            kmedoidAnalysisResults.add(mdistance/mcurCluster.getRecords().size());
        }
        
        session.setAttribute("KMEDOID_ANALYSIS_RESULTS", kmedoidAnalysisResults);
        System.out.println("results...."+kmedoidAnalysisResults);
        
        SDSCMPhase nphase=new SDSCMPhase();
        this.dispose();
        nphase.setVisible(true);
      
}//GEN-LAST:event_jButton4ActionPerformed

    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        // TODO add your handling code here:
        int count;
        
        
         SessionBean session = SessionBean.getSession();

        try{
            count = Integer.parseInt(this.txtClusterCount.getText());
            
             java.io.InputStream in = new FileInputStream(new File("input//cleaninput.txt"));
                com.io.util.DataReaderUtil reader = new com.io.util.DataReaderUtil();
         
            //  System.out.println("zzzzzzzzzzzzzzzzzzzz....");
                InputDataBean dataBean = reader.readData(in);
            if(count<=0 || count> dataBean.getDataSet().length()){
                JOptionPane.showMessageDialog(this,"Please enter valid frequency.","Message",JOptionPane.OK_OPTION);
            }else{
        
              session.setAttribute("InputDataSet",dataBean);
                session.setAttribute("ClusterCount", count);
                // prepare the clusters 
                System.out.println("count "+count);
                // and store in session
        
                
                 // method 1 - K-Means
                

                //METHOD-1 K-means
                java.util.ArrayList<KMeanCluster> kmeanclusters = new KMeanClusterGenerator().generateClusters(dataBean.getDataSet(), count); 
                session.setAttribute("KMEAN_CLUSTERS", kmeanclusters);
                fillClusters(kmeanclusters,kmeanArea);
                
                // method 2 - 
                java.util.ArrayList<KMedoidCluster> kmedoidclusters = new KMedoidClusterGenerator().generateClusters(dataBean.getDataSet(), count); 
                session.setAttribute("KMEDOID_CLUSTERS", kmedoidclusters);
                fillClusters(kmedoidclusters,kmedoidArea);
                // method 3 - MST
               
                
              
            }
             
           
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Please enter valid frequency.","Message",JOptionPane.OK_OPTION);
        }
      
    }//GEN-LAST:event_GenerateActionPerformed

     private void fillClusters(List clusters,JTextArea area){
        area.setText("");
        Cluster currentCluster = null;
        for(int i=0;i<clusters.size();i++){
            area.append("\n");
            area.append("**************************************\n");
            area.append("\n");
            area.append("  Cluster "+(i+1)+"\n");
            area.append("\n");
            currentCluster = (Cluster)clusters.get(i);
            ArrayList<Record> records = currentCluster.getRecords();
            Record curRecord = null;
            for(int j=0;j<records.size();j++){
                curRecord = records.get(j);
                for(int k=0;k<curRecord.getSize();k++){
                    area.append(curRecord.getAttribute(k)+"\t");
                }
                area.append("\n");
            }
            area.append("\n");
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ClusterPhase().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Generate;
    private javax.swing.JTabbedPane clustersTab;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea kmeanArea;
    private javax.swing.JPanel kmeanTab;
    private javax.swing.JTextArea kmedoidArea;
    private javax.swing.JPanel kmedoidsTab;
    private javax.swing.JTextField txtClusterCount;
    // End of variables declaration//GEN-END:variables
}
